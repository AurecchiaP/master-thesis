
@mastersthesis{kaelin,
  author = "Ruben K채lin",
  title = "Advanced Features for an Integrated Development Environment",
  school = "ETH Z체rich",
  year = "2015"
}
@phdthesis{schwerhoff,
  author = "Malte Schwerhoff",
  title = "Advancing Automated, Permission-Bases Program Verification Using Symbolic Execution",
  school = "ETH Z체rich",
  year = "2016"
}
@inproceedings{iterated-separating-conjunctions,
 author = {P. M\"uller and M. Schwerhoff and A. J. Summers},
 title = {Automatic Verification of Iterated Separating Conjunctions using Symbolic Execution},
 booktitle = {Computer Aided Verification (CAV)},
 editor = {S. Chaudhuri and A. Farzan},
 volume = {9779},
 pages = {405--425},
 year = {2016},
 series = {LNCS},
 publisher = {Springer-Verlag},
}
@mastersthesis{colombo,
  author = "Ivo Colombo", 
  title = "Debugging Symbolic Execution",
  school = "ETH Z체rich",
  year = "2012"
}
@inproceedings{viper,
  author = {P. M{\"u}ller and M. Schwerhoff and A. J. Summers},
  title = {Viper: A Verification Infrastructure for Permission-Based Reasoning},
  booktitle = {Verification, Model Checking, and Abstract Interpretation (VMCAI)},
  editor = {B. Jobstmann and K. R. M. Leino},
  year = {2016},
  publisher = {Springer-Verlag},
  series = {LNCS},
  pages = {41-62},
  volume = {9583}
}
@article{simplify,
 author = {Detlefs, David and Nelson, Greg and Saxe, James B.},
 title = {Simplify: A Theorem Prover for Program Checking},
 journal = {J. ACM},
 issue_date = {May 2005},
 volume = {52},
 number = {3},
 month = may,
 year = {2005},
 issn = {0004-5411},
 pages = {365--473},
 numpages = {109},
 url = {http://doi.acm.org/10.1145/1066100.1066102},
 doi = {10.1145/1066100.1066102},
 acmid = {1066102},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Theorem proving, decision procedures, program checking},
} 
@InProceedings{e-matching,
  author="de Moura, Leonardo
  and Bj{\o}rner, Nikolaj",
  editor="Pfenning, Frank",
  title="Efficient E-Matching for SMT Solvers",
  booktitle="Automated Deduction -- CADE-21",
  year="2007",
  publisher="Springer Berlin Heidelberg",
  address="Berlin, Heidelberg",
  pages="183--198",
  isbn="978-3-540-73595-3"
}

@techreport{symbolic-execution,
author="Jacobs, Bart
and Smans, Jan
and Piessens, Frank",
title="Verification of Imperative Programs: The VeriFast Approach. A Draft Course Text.",
year="2010",
number="Technical Report CW-578",
institution="Department of Computer Science, Katholieke Universiteit Leuven, Belgium",
}
@InProceedings{verifast,
author="Jacobs, Bart
and Smans, Jan
and Philippaerts, Pieter
and Vogels, Fr{\'e}d{\'e}ric
and Penninckx, Willem
and Piessens, Frank",
editor="Bobaru, Mihaela
and Havelund, Klaus
and Holzmann, Gerard J.
and Joshi, Rajeev",
title="VeriFast: A Powerful, Sound, Predictable, Fast Verifier for C and Java",
booktitle="NASA Formal Methods",
year="2011",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="41--55",
isbn="978-3-642-20398-5"
}

@inproceedings{quantified_permissions,
  author = {P. M\"uller and M. Schwerhoff and A. J. Summers},
  title = {Automatic Verification of Iterated Separating Conjunctions using Symbolic Execution},
  booktitle = {Computer Aided Verification (CAV)},
  editor = {S. Chaudhuri and A. Farzan},
  volume = {9779},
  pages = {405--425},
  year = {2016},
  series = {LNCS},
  publisher = {Springer-Verlag},
}
@online{alloy_web,
  author = {AlloyTools},
  title = {alloytools.org},
  year = {2017},
  url = {http://alloytools.org/},
  urldate = {2018-03-20}
}
@Article{sed,
  author="Hentschel, Martin
  and Bubel, Richard
  and H{\"a}hnle, Reiner",
  title="The Symbolic Execution Debugger (SED): a platform for interactive symbolic execution, debugging, verification and more",
  journal="International Journal on Software Tools for Technology Transfer",
  year="2018",
  month="Mar",
  day="03",
  issn="1433-2787",
  doi="10.1007/s10009-018-0490-9",
  url="https://doi.org/10.1007/s10009-018-0490-9"
}
@InProceedings{jml,
author="Chalin, Patrice
and Kiniry, Joseph R.
and Leavens, Gary T.
and Poll, Erik",
editor="de Boer, Frank S.
and Bonsangue, Marcello M.
and Graf, Susanne
and de Roever, Willem-Paul",
title="Beyond Assertions: Advanced Specification and Verification with JML and ESC/Java2",
booktitle="Formal Methods for Components and Objects",
year="2006",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="342--363",
abstract="Many state-based specification languages, including the Java Modeling Language (JML), contain at their core specification constructs familiar to most undergraduates: e.g., assertions, pre- and postconditions, and invariants. Unfortunately, these constructs are not sufficiently expressive to permit formal modular verification of programs written in modern object-oriented languages like Java. The necessary extra constructs for specifying an object-oriented module include (perhaps the less familiar) frame properties, datagroups, and ghost and model fields. These constructs help specifiers deal with potential problems related to, for example, unexpected side effects, aliasing, class invariants, inheritance, and lack of information hiding. This tutorial paper focuses on JML's realization of these constructs, explaining their meaning while illustrating how they can be used to address the stated problems.",
isbn="978-3-540-36750-5"
}

@book{KeY,
  title = {Deductive Software Verification - The KeY Book - From Theory to Practice},
  editor = {Wolfgang Ahrendt and Bernhard Beckert and Richard Bubel and Reiner H\"{a}hnle and Peter H. Schmitt and Mattias Ulbrich},
  url = {http://dx.doi.org/10.1007/978-3-319-49812-6},
  doi = {10.1007/978-3-319-49812-6},
  isbn = {978-3-319-49811-9},
  year  = {2016},
  date = {2016-12-16},
  volume = {10001},
  publisher = {Springer},
  series = {Lecture Notes in Computer Science},
  keywords = {},
  pubstate = {published},
  tppubtype = {book}
}
@book{software-abstractions,
 author = {Jackson, Daniel},
 title = {Software Abstractions: Logic, Language, and Analysis},
 year = {2012},
 isbn = {0262017156, 9780262017152},
 publisher = {The MIT Press},
}

@inbook{smt,
title = "Satisfiability modulo theories",
author = "Clark Barrett and Roberto Sebastiani and Seshia, {Sanjit A.} and Cesare Tinelli",
year = "2009",
doi = "10.3233/978-1-58603-929-5-825",
language = "English (US)",
isbn = "9781586039295",
volume = "185",
series = "Frontiers in Artificial Intelligence and Applications",
number = "1",
pages = "825--885",
booktitle = "Handbook of Satisfiability",
edition = "1",
}

@MISC{unifying-execution,
    author = {Aleksandar Milicevic and Derek Rayside and Kuat Yessenov and Daniel Jackson},
    title = {Unifying execution of imperative and declarative code},
    year = {2011}
}
@book{design-patterns,
  added-at = {2010-06-05T16:40:25.000+0200},
  asin = {0201633612},
  author = {Gamma, Erich and Helm, Richard and Johnson, Ralph and Vlissides, John M.},
  biburl = {https://www.bibsonomy.org/bibtex/27e3f1154ab1fbce54752a46dba7f2217/pnk},
  description = {Amazon.com: Design Patterns: Elements of Reusable Object-Oriented Software (9780201633610): Erich Gamma, Richard Helm, Ralph Johnson, John M. Vlissides: Books},
  dewey = {005.12},
  ean = {9780201633610},
  edition = 1,
  interhash = {7fe32957be97afaf4ecb38b5490d23b4},
  intrahash = {7e3f1154ab1fbce54752a46dba7f2217},
  isbn = {0201633612},
  keywords = {DBIS Design Object-Oriented Patterns SS2010 Seminar Software},
  publisher = {Addison-Wesley Professional},
  timestamp = {2010-06-05T16:40:25.000+0200},
  title = {Design Patterns: Elements of Reusable Object-Oriented Software},
  url = {http://www.amazon.com/Design-Patterns-Elements-Reusable-Object-Oriented/dp/0201633612/ref=ntt_at_ep_dpi_1},
  year = 1994
}

